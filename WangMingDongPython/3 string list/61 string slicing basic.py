# 字符串切片 从原本的字符串中提取一部分字符

# demo1
name = "zhangpenghua"
print(
    name[0:3]
)  # 输出zhang和range(X,Y,Z)很像，X是开始位置，Y是结束位置，Z是步长，默认步长为1，即从X到Y-1

# demo2
name2 = "abcd"
print(name2[:3])  # 输出abc 左面不写默认为0

# demo3
name3 = "123456789"  #       (字符1,2,3,4,5,6,7,8,9)字符4-5
print(name3[3:5])  # 输出45 (下标0,1,2,3,4,5,6,7,8)下标3到5-1，即3和4

# demo4
name4 = "123456789"
print(name4[2:])  # 输出3456789 左空为-1且包括尾部字符,如写就不包括尾部字符如4.1
# demo4.1
name4_1 = "123456789"
print(name4_1[2:-1])  # 输出345678 左空为2，右空为-1，即2到-2，即3到8

# demo5
name5 = "123456789"
print(name5[1:5:2])  # 输出246 [X:Y:Z] 取下标1到下标5-1，步长为2的值

# demo6
name6 = "123456789"
print(name6[5:1:-1])  # 输出6543 [X:Y:Z] [X:Y:Z] 步长空默认是1,步长为-1(得倒着数)
# 从下标5到下标2 末尾取值下标2因为末尾不包含最后一位

# demo7
name7 = "123456789"
print(name7[5:1:-2])  # 输出63

# demo8
name8 = "123456789"
print(name8[::2])  # 输出13579 两侧都空默认为0和-1，步长为2

# demo9
name9 = "123456789"
print(name9[::])  # 输出123456789 两侧都空默认为0和-1，步长为1
# 另一种简写方式 print(name9[:])
# 也等同 print(name9)

# demo10
name10 = "123456789"
print(name10[::-1])  # 输出987654321 逆序 两侧都空默认为0和-1，步长为-1

# demo11
name11 = "123456789"
print(name11[-3:])  # 输出789 取最后3位
# 简写print(name12[-3::])# 输出789 取最后3位到结尾
