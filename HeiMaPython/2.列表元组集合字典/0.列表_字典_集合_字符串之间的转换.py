# -*- coding: utf-8 -*-
# 数据结构转换工具 - 使用中文变量名

# ====================== 字符串转换 ======================
# 字符串 ↔ 列表
原始字符串 = "hello"
字符列表 = list(原始字符串)  # ['h', 'e', 'l', 'l', 'o']

带分隔符字符串 = "a,b,c"
分割后的列表 = 带分隔符字符串.split(",")  # ['a', 'b', 'c']

字符列表 = ['a', 'b', 'c']
拼接后的字符串 = ''.join(字符列表)  # 'abc'

数字列表 = ['1', '2', '3']
带分隔符字符串 = ','.join(数字列表)  # '1,2,3'

# 字符串 ↔ 集合
原始字符串 = "hello"
字符集合 = set(原始字符串)  # {'h', 'e', 'l', 'o'}

无序字符集合 = {'a', 'b', 'c'}
有序字符串 = ''.join(sorted(无序字符集合))  # 'abc'

# 字符串 ↔ 字典 (需JSON格式)
import json
json字符串 = '{"name": "张三", "age": 30}'
字典数据 = json.loads(json字符串)  # {'name': '张三', 'age': 30}

原始字典 = {'a': 1, 'b': 2}
json格式字符串 = json.dumps(原始字典, ensure_ascii=False)  # '{"a": 1, "b": 2}'


# ====================== 列表转换 ======================
# 列表 ↔ 集合
含重复元素列表 = [1, 2, 2, 3]
去重集合 = set(含重复元素列表)  # {1, 2, 3}

无序集合 = {4, 5, 6}
转换后的列表 = list(无序集合)  # [4, 5, 6]

# 列表 ↔ 字典 (需键值对列表)
键值对列表 = [('a', 1), ('b', 2)]
转换后的字典 = dict(键值对列表)  # {'a': 1, 'b': 2}

原始字典 = {'x': 10, 'y': 20}
字典键列表 = list(原始字典.keys())  # ['x', 'y']
字典值列表 = list(原始字典.values())  # [10, 20]
字典项列表 = list(原始字典.items())  # [('x', 10), ('y', 20)]


# ====================== 集合转换 ======================
# 集合 ↔ 字典 (仅保留键)
原始字典 = {'a': 1, 'b': 2}
字典键集合 = set(原始字典)  # {'a', 'b'}


# ====================== 使用示例 ======================
def 演示示例():
    # 示例1: 字符串转列表再转集合去重
    文本内容 = "apple banana apple"
    单词列表 = 文本内容.split()  # ['apple', 'banana', 'apple']
    唯一单词集合 = set(单词列表)  # {'apple', 'banana'}
    print(f"去重后的单词: {唯一单词集合}")

    # 示例2: 字典转列表处理后转回字典
    成绩字典 = {'数学': 90, '英语': 85, '语文': 95}
    成绩项列表 = list(成绩字典.items())  # [('数学', 90), ('英语', 85), ('语文', 95)]
    
    # 加分操作
    新成绩项列表 = [(科目, 分数 + 5) for 科目, 分数 in 成绩项列表]
    新成绩字典 = dict(新成绩项列表)  # {'数学': 95, '英语': 90, '语文': 100}
    print(f"加分后的成绩: {新成绩字典}")

    # 示例3: 字符串与字典的转换
    json格式数据 = '{"城市": "北京", "温度": 25}'
    天气数据 = json.loads(json格式数据)  # {'城市': '北京', '温度': 25}
    print(f"城市: {天气数据['城市']}, 温度: {天气数据['温度']}°C")


if __name__ == "__main__":
    演示示例()