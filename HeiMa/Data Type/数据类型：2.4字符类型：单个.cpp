//字符型：单个字母的数据类型ASCII编码
//案例:char a = 'x';
//注意：1、加单引号 2、只能有一个字符并且为以下表中特定字符

//原理：计算机把字符编码到ASCII编码到存储单元
//0	NUL（空）			32 空格 64	@	96	`
//1	SOH（标头的开头）		33	!	65	一个	97	一个
//2	STX（文本开头）		34	"	66	B	98	b
//3	ETX（文本末尾）		35	#	67	C	99	c
//4	EOT（传输结束）		36	$	68	D	100	d
//5	ENQ （查询）			37	%	69	E	101	e
//6	确认（确认）			38	&	70	F	102	f
//7	贝尔（铃铛）			39	'	71	G	103	g
//8	BS（退格）			40	(	72	H	104	h
//9	HT（水平选项卡）		41	)	73	我	105	我
//10低频（换行/新线）		42	*	74	J	106	j
//11VT（垂直选项卡）		43	+	75	K	107	k
//12FF（表单源/新页面）	44	,	76	L	108	l
//13CR（回车）			45	-	77	M	109	m
//14SO（移出）			46	.	78	N	110	n
//15SI（移入）			47	/	79	O	111	o
//16DLE（数据链路转义）	48	0	80	P	112	p
//17DC1（数据控制 1）		49	1	81	Q	113	q
//18DC2（数据控制 2）		50	2	82	R	114	r
//19DC3（数据控制 3）		51	3	83	S	115	s
//20DC4（数据控制 4）		52	4	84	T	116	t
//21NAK（否定确认）		53	5	85	U	117	u
//22SYN（同步空闲）		54	6	86	V	118	v
//23ETB（传输块的末端）	55	7	87	W	119	w
//24可以（取消）			56	8	88	X	120	x
//25EM（介质结束）		57	9	89	Y	121	y
//26SUB （替补）			58	:	90	Z	122	z
//27电调（逃生）			59	;	91	[	123	{
//28FS（文件分隔符）		60	<	92	\	124	|
//29GS（组分隔符）		61	=	93	]	125	}
//30RS（记录分隔符）		62	>	94	^	126	~
//31美国（单位分隔符）	63	?	95	_	127	DEL （删除）
//代码 0 - 31 称为不可打印字符，它们主要用于格式化和控制打印机。其中大多数现在已经过时了。
//代码 32 - 127 称为可打印字符，它们表示大多数计算机用于显示基本英语文本的字母、数字字符和标点符号。

#include<iostream>
using namespace std;

int main()
{
	char one = 'a';

	cout << one << endl;
	cout << sizeof(char) << endl;
	//强制转换整型查看ASCII码
	cout << (int)one << endl;

	system("pause");
	return 0;
}